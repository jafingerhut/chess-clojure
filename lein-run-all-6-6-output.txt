        # hash     avg       max     hash fn
# items  vals   collisions collision name
------- ------- ---------- --------- -----------
All-pairs in [0 0] thru [19 19]
    400     400       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
    400     400       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
    400     400       1.00         1 alt-hash-1
    400     400       1.00         1 alt-hash-2
    400     400       1.00         1 engelberg-hash-2013-10-29
    400     400       1.00         1 engelberg-hash-2013-10-30
    400     400       1.00         1 engelberg-hash-2013-10-31
All-pairs in [0 0] thru [49 49]
   2500    2500       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
   2500    2500       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
   2500    2500       1.00         1 alt-hash-1
   2500    2500       1.00         1 alt-hash-2
   2500    2500       1.00         1 engelberg-hash-2013-10-29
   2500    2500       1.00         1 engelberg-hash-2013-10-30
   2500    2500       1.00         1 engelberg-hash-2013-10-31
All-pairs in [0 0] thru [99 99]
  10000   10000       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
  10000   10000       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
  10000   10000       1.00         1 alt-hash-1
  10000   10000       1.00         1 alt-hash-2
  10000   10000       1.00         1 engelberg-hash-2013-10-29
  10000   10000       1.00         1 engelberg-hash-2013-10-30
  10000   10000       1.00         1 engelberg-hash-2013-10-31
All-pairs in [0 0] thru [399 399]
 160000  159998       1.00         2 Clojure 1.6.0-master-SNAPSHOT hash
 160000  159987       1.00         2 alt-hash-0 (should be same as Clojure 1.5.1 hash)
 160000  160000       1.00         1 alt-hash-1
 160000  159996       1.00         2 alt-hash-2
 160000  160000       1.00         1 engelberg-hash-2013-10-29
 160000  159998       1.00         2 engelberg-hash-2013-10-30
 160000  160000       1.00         1 engelberg-hash-2013-10-31

nqueens sorted-set

        # hash     avg       max     hash fn
# items  vals   collisions collision name
------- ------- ---------- --------- -----------
Solve null example set elem #{}
      1       1       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
      1       1       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
      1       1       1.00         1 alt-hash-1
      1       1       1.00         1 alt-hash-2
      1       1       1.00         1 engelberg-hash-2013-10-29
      1       1       1.00         1 engelberg-hash-2013-10-30
      1       1       1.00         1 engelberg-hash-2013-10-31
Solve (:Q) example set elem #{[:Q [0 0]]}
     36      36       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
     36      36       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
     36      36       1.00         1 alt-hash-1
     36      36       1.00         1 alt-hash-2
     36      36       1.00         1 engelberg-hash-2013-10-29
     36      36       1.00         1 engelberg-hash-2013-10-30
     36      36       1.00         1 engelberg-hash-2013-10-31
Solve (:B :Q) example set elem #{[:B [0 0]] [:Q [1 2]]}
    680     680       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
    680     155       4.39         8 alt-hash-0 (should be same as Clojure 1.5.1 hash)
    680     170       4.00         4 alt-hash-1
    680     680       1.00         1 alt-hash-2
    680     680       1.00         1 engelberg-hash-2013-10-29
    680     680       1.00         1 engelberg-hash-2013-10-30
    680     680       1.00         1 engelberg-hash-2013-10-31
Solve (:R :B :Q) example set elem #{[:B [0 0]] [:Q [1 2]] [:R [2 4]]}
   6144    6144       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
   6144     304      20.21        72 alt-hash-0 (should be same as Clojure 1.5.1 hash)
   6144     380      16.17        24 alt-hash-1
   6144    6144       1.00         1 alt-hash-2
   6144    6133       1.00         2 engelberg-hash-2013-10-29
   6144    6144       1.00         1 engelberg-hash-2013-10-30
   6144    6144       1.00         1 engelberg-hash-2013-10-31
Solve (:N :R :B :Q) example set elem #{[:B [0 0]] [:N [0 1]] [:Q [1 4]] [:R [3 5]]}
  31920   31920       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
  31920    1076      29.67       408 alt-hash-0 (should be same as Clojure 1.5.1 hash)
  31920    1924      16.59       240 alt-hash-1
  31920   31920       1.00         1 alt-hash-2
  31920   31864       1.00         2 engelberg-hash-2013-10-29
  31920   31920       1.00         1 engelberg-hash-2013-10-30
  31920   31920       1.00         1 engelberg-hash-2013-10-31
Solve (:K :N :R :B :Q) example set elem #{[:B [0 0]] [:K [0 2]] [:N [0 4]] [:Q [2 1]] [:R [1 5]]}
 132832  132829       1.00         2 Clojure 1.6.0-master-SNAPSHOT hash
 132832    2091      63.53      1806 alt-hash-0 (should be same as Clojure 1.5.1 hash)
 132832    4720      28.14      1044 alt-hash-1
 132832  132830       1.00         2 alt-hash-2
 132832  132655       1.00         3 engelberg-hash-2013-10-29
 132832  132829       1.00         2 engelberg-hash-2013-10-30
 132832  132829       1.00         2 engelberg-hash-2013-10-31
Solve (:K :K :N :R :B :Q) example set elem #{[:B [0 0]] [:K [0 2]] [:K [0 4]] [:N [2 0]] [:Q [4 3]] [:R [3 1]]}
 180568  180563       1.00         2 Clojure 1.6.0-master-SNAPSHOT hash
 180568    3013      59.93      2492 alt-hash-0 (should be same as Clojure 1.5.1 hash)
 180568    8321      21.70      1648 alt-hash-1
 180568  180567       1.00         2 alt-hash-2
 180568  180427       1.00         2 engelberg-hash-2013-10-29
 180568  180563       1.00         2 engelberg-hash-2013-10-30
 180568  180563       1.00         2 engelberg-hash-2013-10-31
"Elapsed time: 62998.86 msecs"
180568

nqueens hash-set

        # hash     avg       max     hash fn
# items  vals   collisions collision name
------- ------- ---------- --------- -----------
Solve null example set elem #{}
      1       1       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
      1       1       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
      1       1       1.00         1 alt-hash-1
      1       1       1.00         1 alt-hash-2
      1       1       1.00         1 engelberg-hash-2013-10-29
      1       1       1.00         1 engelberg-hash-2013-10-30
      1       1       1.00         1 engelberg-hash-2013-10-31
Solve (:Q) example set elem #{[:Q [2 3]]}
     36      36       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
     36      36       1.00         1 alt-hash-0 (should be same as Clojure 1.5.1 hash)
     36      36       1.00         1 alt-hash-1
     36      36       1.00         1 alt-hash-2
     36      36       1.00         1 engelberg-hash-2013-10-29
     36      36       1.00         1 engelberg-hash-2013-10-30
     36      36       1.00         1 engelberg-hash-2013-10-31
Solve (:B :Q) example set elem #{[:B [2 3]] [:Q [0 2]]}
    680     680       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
    680     155       4.39         8 alt-hash-0 (should be same as Clojure 1.5.1 hash)
    680     170       4.00         4 alt-hash-1
    680     680       1.00         1 alt-hash-2
    680     680       1.00         1 engelberg-hash-2013-10-29
    680     680       1.00         1 engelberg-hash-2013-10-30
    680     680       1.00         1 engelberg-hash-2013-10-31
Solve (:R :B :Q) example set elem #{[:R [5 3]] [:Q [0 5]] [:B [4 0]]}
   6144    6144       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
   6144     304      20.21        72 alt-hash-0 (should be same as Clojure 1.5.1 hash)
   6144     380      16.17        24 alt-hash-1
   6144    6144       1.00         1 alt-hash-2
   6144    6133       1.00         2 engelberg-hash-2013-10-29
   6144    6144       1.00         1 engelberg-hash-2013-10-30
   6144    6144       1.00         1 engelberg-hash-2013-10-31
Solve (:N :R :B :Q) example set elem #{[:Q [1 3]] [:B [2 5]] [:N [4 5]] [:R [3 0]]}
  31920   31920       1.00         1 Clojure 1.6.0-master-SNAPSHOT hash
  31920    1076      29.67       408 alt-hash-0 (should be same as Clojure 1.5.1 hash)
  31920    1924      16.59       240 alt-hash-1
  31920   31920       1.00         1 alt-hash-2
  31920   31864       1.00         2 engelberg-hash-2013-10-29
  31920   31920       1.00         1 engelberg-hash-2013-10-30
  31920   31920       1.00         1 engelberg-hash-2013-10-31
Solve (:K :N :R :B :Q) example set elem #{[:N [1 4]] [:B [0 4]] [:K [0 0]] [:Q [5 1]] [:R [2 3]]}
 132832  132829       1.00         2 Clojure 1.6.0-master-SNAPSHOT hash
 132832    2091      63.53      1806 alt-hash-0 (should be same as Clojure 1.5.1 hash)
 132832    4720      28.14      1044 alt-hash-1
 132832  132830       1.00         2 alt-hash-2
 132832  132655       1.00         3 engelberg-hash-2013-10-29
 132832  132829       1.00         2 engelberg-hash-2013-10-30
 132832  132829       1.00         2 engelberg-hash-2013-10-31
Solve (:K :K :N :R :B :Q) example set elem #{[:B [4 2]] [:Q [3 0]] [:R [0 1]] [:N [5 5]] [:K [2 2]] [:K [2 5]]}
 180568  180563       1.00         2 Clojure 1.6.0-master-SNAPSHOT hash
 180568    3013      59.93      2492 alt-hash-0 (should be same as Clojure 1.5.1 hash)
 180568    8321      21.70      1648 alt-hash-1
 180568  180567       1.00         2 alt-hash-2
 180568  180427       1.00         2 engelberg-hash-2013-10-29
 180568  180563       1.00         2 engelberg-hash-2013-10-30
 180568  180563       1.00         2 engelberg-hash-2013-10-31
"Elapsed time: 45839.136 msecs"
180568
